{"version":3,"file":"toastr.js","sourceRoot":"","sources":["../../Users/scoope7/toastr-ng2/tmp/broccoli_type_script_compiler-input_base_path-ovZsQlYY.tmp/0/src/components/toastr/toastr.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qBAcO,eAAe,CAAC,CAAA;AACvB,wBAAwB,mBAAmB,CAAC,CAAA;AAE5C,uBAA4C,iBAAiB,CAAC,CAAA;AAC9D,kCAAiC,6BAA6B,CAAC,CAAA;AAG/D;IAAA;QACE,4BAA4B;QAC5B,8BAA8B;QAC9B,gBAAW,GAAY,KAAK,CAAC;QAC7B,kDAAkD;QAClD,kBAAkB;QAClB,kCAAkC;QAClC,oCAAoC;QACpC,kBAAkB;QAClB,iBAAiB;QACjB,eAAe;QACf,gBAAW,GAAY,KAAK,CAAC;QAC7B,YAAO,GAAW,IAAI,CAAC;QAEvB,eAAU,GAAW,OAAO,CAAC;QAC7B,kBAAa,GAAW,iBAAiB,CAAC;QAC1C,eAAU,GAAW,aAAa,CAAC;QACnC,iBAAY,GAAW,eAAe,CAAC;QACvC,iBAAY,GAAY,IAAI,CAAC;QAC7B,mBAAc,GAAG,KAAK,CAAC;IACzB,CAAC;IArBD;QAAC,iBAAU,EAAE;;mBAAA;IAqBb,kBAAC;AAAD,CAAC,AApBD,IAoBC;AApBY,mBAAW,cAoBvB,CAAA;AAID;IAAkC,gCAAW;IAA7C;QAAkC,8BAAW;QAC3C,gBAAW,GAAY,KAAK,CAAC;QAC7B,QAAQ;QACR,2CAA2C;QAC3C,gBAAW,GAAG;YACZ,KAAK,EAAE,aAAa;YACpB,IAAI,EAAE,YAAY;YAClB,OAAO,EAAE,eAAe;YACxB,OAAO,EAAE,eAAe;SACzB,CAAC;QACF,cAAS,GAAW,CAAC,CAAC;QACtB,gBAAW,GAAY,IAAI,CAAC;QAC5B,sBAAiB,GAAY,KAAK,CAAC;IAErC,CAAC;IAfD;QAAC,iBAAU,EAAE;;oBAAA;IAeb,mBAAC;AAAD,CAAC,AAdD,CAAkC,WAAW,GAc5C;AAdY,oBAAY,eAcxB,CAAA;AAUD;IAQE,uBACS,YAA0B,EACzB,OAAgB,EAChB,QAAkB;QAFnB,iBAAY,GAAZ,YAAY,CAAc;QACzB,YAAO,GAAP,OAAO,CAAS;QAChB,aAAQ,GAAR,QAAQ,CAAU;QARpB,UAAK,GAAW,CAAC,CAAC;QAClB,WAAM,GAAU,EAAE,CAAC;QAEnB,yBAAoB,GAAW,EAAE,CAAC;IAMvC,CAAC;IAEG,+BAAO,GAAd,UAAe,OAAe,EAAE,KAAc,EAAE,eAA6B;QAC3E,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,eAAe,CAAC,CAAC;IACxE,CAAC;IACM,6BAAK,GAAZ,UAAa,OAAe,EAAE,KAAc,EAAE,eAA6B;QACzE,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC;QACjD,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,eAAe,CAAC,CAAC;IACxE,CAAC;IACM,4BAAI,GAAX,UAAY,OAAe,EAAE,KAAc,EAAE,eAA6B;QACxE,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,eAAe,CAAC,CAAC;IACxE,CAAC;IACM,+BAAO,GAAd,UAAe,OAAe,EAAE,KAAc,EAAE,eAA6B;QAC3E,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,eAAe,CAAC,CAAC;IACxE,CAAC;IACM,6BAAK,GAAZ,UAAa,OAAgB;QAC3B,qCAAqC;QACrC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5C,EAAE,CAAC,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;oBACvC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,EAAtC,CAAsC,CAAC,CAAC;oBAC7E,MAAM,CAAC;gBACT,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,EAAtC,CAAsC,CAAC,CAAC;YAC/E,CAAC;QACH,CAAC;IACH,CAAC;IACM,8BAAM,GAAb,UAAc,OAAe;QAC3B,IAAA,6BAAqD,EAA/C,gBAAK,EAAE,4BAAW,CAA8B;QACtD,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACD,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,MAAM,EAAE,EAAZ,CAAY,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS;YAC7B,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1E,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;gBAC/D,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC;oBACvD,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;gBAChD,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,OAAO,EAAE,EAAb,CAAa,CAAC,CAAC;QACtD,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACO,kCAAU,GAAlB,UAAmB,OAAe;QAChC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;gBACvC,MAAM,CAAC,EAAC,KAAK,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC;YACjD,CAAC;QACH,CAAC;QACD,MAAM,CAAC,EAAC,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAC,CAAC;IAC1C,CAAC;IACO,mCAAW,GAAnB,UAAoB,OAAe;QACjC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;gBACvC,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACH,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAEO,0CAAkB,GAA1B,UACE,IAAY,EACZ,OAAe,EACf,KAAc,EACd,eAAgD;QAAhD,+BAAgD,GAAhD,kBAA+B,IAAI,CAAC,YAAY;QAEhD,qCAAqC;QACrC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACrE,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC;QACpC,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;YACvF,YAAY,GAAG,IAAI,CAAC;YACpB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAC1D,CAAC;QACH,CAAC;QAED,6BAA6B;QAC7B,8CAA8C;QAC9C,IAAI,iBAAiB,GAAG,yBAAkB,CAAC,OAAO,CAAC;YACjD,IAAI,eAAQ,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACzD,IAAI,eAAQ,CAAC,eAAe,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;SAChD,CAAC,CAAC;QACH,IAAI,KAAK,GAAG,yBAAkB,CAAC,qBAAqB,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvF,IAAI,SAAS,GAAG,IAAI,wBAAe,CACjC,eAAe,CAAC,cAAc,EAC9B,IAAI,CAAC,gBAAgB,EACrB,KAAK,CACN,CAAC;QACF,IAAI,QAAQ,GAAgB;YAC1B,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE;YACrB,SAAA,OAAO;SACR,CAAC;QACF,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;QACpE,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;QACjC,UAAU,CAAC,IAAI,CAAC,UAAC,GAAG;YAClB,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC9B,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;YACpB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACZ,uCAAuC;gBACvC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;gBACzD,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC;gBAChD,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;gBAC5C,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;gBAC/C,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,GAAG,eAAe,CAAC;gBACxD,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBAClB,UAAU,CAAC,cAAM,OAAA,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,aAAa,EAAE,EAA7C,CAA6C,CAAC,CAAC;gBAClE,CAAC;gBACD,MAAM,CAAC,MAAM,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAzIH;QAAC,iBAAU,EAAE;;qBAAA;IA0Ib,oBAAC;AAAD,CAAC,AAzID,IAyIC;AAzIY,qBAAa,gBAyIzB,CAAA;AAEY,wBAAgB,GAAQ;IACnC,oCAAgB;IAChB,iBAAO;IACP,cAAO,CAAC,aAAa,EAAE;QACrB,UAAU,EAAE,UAAC,OAAgB,EAAE,QAAkB;YAC/C,MAAM,CAAC,IAAI,aAAa,CAAC,IAAI,YAAY,EAAE,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QAClE,CAAC;QACD,IAAI,EAAE,CAAC,iBAAO,EAAE,eAAQ,CAAC;KAC1B,CAAC;CACH,CAAC;AAuCF;IAUE,eACU,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAJtC,4BAA4B;QAC5B,UAAK,GAAW,UAAU,CAAC;IAIxB,CAAC;IACJ,6BAAa,GAAb;QAAA,iBAOC;QANC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACtB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;gBACxB,KAAI,CAAC,MAAM,EAAE,CAAC;YAChB,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,wBAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;IACH,CAAC;IAED,sBAAM,GAAN;QAAA,iBAMC;QALC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACvB,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,EAAvC,CAAuC,EAAE,GAAG,CAAC,CAAC;IACjE,CAAC;IAvEH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,SAAS;YACnB,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,i0BAiBT;YACD,UAAU,EAAE;gBACV,cAAO,CAAC,UAAU,EAAE;oBAClB,YAAK,CAAC,UAAU,EAAE,YAAK,CAAC;wBACtB,OAAO,EAAE,CAAC;qBACX,CAAC,CAAC;oBACH,YAAK,CAAC,QAAQ,EAAE,YAAK,CAAC;wBACpB,OAAO,EAAE,CAAC;qBACX,CAAC,CAAC;oBACH,YAAK,CAAC,SAAS,EAAE,YAAK,CAAC;wBACrB,OAAO,EAAE,CAAC;qBACX,CAAC,CAAC;oBACH,iBAAU,CAAC,qBAAqB,EAAE,cAAO,CAAC,eAAe,CAAC,CAAC;oBAC3D,iBAAU,CAAC,oBAAoB,EAAE,cAAO,CAAC,eAAe,CAAC,CAAC;iBAC3D,CAAC;aACH;SACF,CAAC;;aAAA;IAoCF,YAAC;AAAD,CAAC,AAnCD,IAmCC;AAnCY,aAAK,QAmCjB,CAAA","sourcesContent":["import {\n  Component,\n  Injectable,\n  ViewContainerRef,\n  ReflectiveInjector,\n  provide,\n  OnInit,\n  Injector,\n  Provider,\n  trigger,\n  state,\n  transition,\n  animate,\n  style,\n} from '@angular/core';\nimport { Overlay } from './overlay/overlay';\nimport { OverlayRef } from './overlay/overlay-ref';\nimport { ComponentPortal, PortalHost } from './portal/portal';\nimport { OverlayContainer } from './overlay/overlay-container';\n\n@Injectable()\nexport class ToastConfig {\n  // TODO: might not be needed\n  // allowHtml: boolean = false;\n  closeButton: boolean = false;\n  // closeHtml: string = '<button>&times;</button>';\n  // TODO: extended?\n  // extendedTimeOut: number = 1000;\n  // TODO: listeners for toast actions\n  // onHidden: null;\n  // onShown: null;\n  // onTap: null;\n  progressBar: boolean = false;\n  timeOut: number = 5000;\n\n  toastClass: string = 'toast';\n  positionClass: string = 'toast-top-right';\n  titleClass: string = 'toast-title';\n  messageClass: string = 'toast-message';\n  tapToDismiss: boolean = true;\n  toastComponent = Toast;\n}\n\n\n@Injectable()\nexport class ToastrConfig extends ToastConfig {\n  autoDismiss: boolean = false;\n  // TODO:\n  // containerId: string = 'toast-container';\n  iconClasses = {\n    error: 'toast-error',\n    info: 'toast-info',\n    success: 'toast-success',\n    warning: 'toast-warning',\n  };\n  maxOpened: number = 0;\n  newestOnTop: boolean = true;\n  preventDuplicates: boolean = false;\n  // preventOpenDuplicates: boolean = false;\n}\n\nexport interface ActiveToast {\n  toastId: number;\n  message: string;\n  portal?: Promise<PortalHost>;\n  overlayRef?: Promise<OverlayRef>;\n}\n\n@Injectable()\nexport class ToastrService {\n  // TODO: remove when we can access the global view ref from service\n  viewContainerRef: ViewContainerRef;\n  private index: number = 0;\n  private toasts: any[] = [];\n  private container: OverlayRef;\n  private previousToastMessage: string = '';\n\n  constructor(\n    public toastrConfig: ToastrConfig,\n    private overlay: Overlay,\n    private injector: Injector\n  ) {}\n\n  public success(message: string, title?: string, optionsOverride?: ToastConfig): ActiveToast {\n    const type = this.toastrConfig.iconClasses.success;\n    return this._buildNotification(type, message, title, optionsOverride);\n  }\n  public error(message: string, title?: string, optionsOverride?: ToastConfig): ActiveToast {\n    const type = this.toastrConfig.iconClasses.error;\n    return this._buildNotification(type, message, title, optionsOverride);\n  }\n  public info(message: string, title?: string, optionsOverride?: ToastConfig): ActiveToast {\n    const type = this.toastrConfig.iconClasses.info;\n    return this._buildNotification(type, message, title, optionsOverride);\n  }\n  public warning(message: string, title?: string, optionsOverride?: ToastConfig): ActiveToast {\n    const type = this.toastrConfig.iconClasses.warning;\n    return this._buildNotification(type, message, title, optionsOverride);\n  }\n  public clear(toastId?: number) {\n    // Call every toast's remove function\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (toastId !== undefined) {\n        if (this.toasts[i].toastId === toastId) {\n          this.toasts[i].portal.then(portal => portal._hostElement.component.remove());\n          return;\n        }\n      } else {\n        this.toasts[i].portal.then(portal => portal._hostElement.component.remove());\n      }\n    }\n  }\n  public remove(toastId: number): boolean {\n    let { index, activeToast } = this._findToast(toastId);\n    if (!activeToast) {\n      return false;\n    }\n    activeToast.overlayRef.then(ref => ref.detach());\n    this.toasts.splice(index, 1);\n    if (this.toastrConfig.maxOpened &&\n      this.toasts.length && this.toasts.length >= this.toastrConfig.maxOpened) {\n      this.toasts[+this.toastrConfig.maxOpened - 1].portal.then((portal) => {\n        if (portal._hostElement.component.state === 'inactive') {\n          portal._hostElement.component.activateToast();\n        }\n      });\n    }\n    if (!this.toasts.length) {\n      this.overlay.dispose();\n      activeToast.overlayRef.then((ref) => ref.dispose());\n    }\n    return true;\n  }\n  private _findToast(toastId: number): {index: number, activeToast: ActiveToast} {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].toastId === toastId) {\n        return {index: i, activeToast: this.toasts[i]};\n      }\n    }\n    return {index: null, activeToast: null};\n  }\n  private isDuplicate(message: string): boolean {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].message === message) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private _buildNotification(\n    type: string,\n    message: string,\n    title?: string,\n    optionsOverride: ToastConfig = this.toastrConfig\n  ): ActiveToast {\n    // max opened and auto dismiss = true\n    if (this.toastrConfig.preventDuplicates && this.isDuplicate(message)) {\n      return;\n    }\n    this.previousToastMessage = message;\n    let keepInactive = false;\n    if (+this.toastrConfig.maxOpened && this.toasts.length >= +this.toastrConfig.maxOpened) {\n      keepInactive = true;\n      if (this.toastrConfig.autoDismiss) {\n        this.clear(this.toasts[this.toasts.length - 1].toastId);\n      }\n    }\n\n    // pass current view to toast\n    // this keeps the ToastrService as a singleton\n    let resolvedProviders = ReflectiveInjector.resolve([\n      new Provider('view', { useValue: this.viewContainerRef }),\n      new Provider('ToastrService', {useValue: this}),\n    ]);\n    let child = ReflectiveInjector.fromResolvedProviders(resolvedProviders, this.injector);\n    let component = new ComponentPortal(\n      optionsOverride.toastComponent,\n      this.viewContainerRef,\n      child\n    );\n    let inserted: ActiveToast = {\n      toastId: this.index++,\n      message,\n    };\n    let overlayRef = this.overlay.create(optionsOverride.positionClass);\n    inserted.overlayRef = overlayRef;\n    overlayRef.then((ref) => {\n      let p = ref.attach(component);\n      inserted.portal = p;\n      p.then((portal) => {\n        // TODO: explore injecting these values\n        portal._hostElement.component.toastId = inserted.toastId;\n        portal._hostElement.component.message = message;\n        portal._hostElement.component.title = title;\n        portal._hostElement.component.toastType = type;\n        portal._hostElement.component.options = optionsOverride;\n        if (!keepInactive) {\n          setTimeout(() => portal._hostElement.component.activateToast());\n        }\n        return portal;\n      });\n    });\n    this.toasts.push(inserted);\n    return inserted;\n  }\n}\n\nexport const TOASTR_PROVIDERS: any = [\n  OverlayContainer,\n  Overlay,\n  provide(ToastrService, {\n    useFactory: (overlay: Overlay, injector: Injector) => {\n      return new ToastrService(new ToastrConfig(), overlay, injector);\n    },\n    deps: [Overlay, Injector]\n  })\n];\n\n@Component({\n  selector: '[toast]',\n  providers: [],\n  template: `\n  <div @flyInOut=\"state\" class=\"{{options.toastClass}} {{toastType}}\" (click)=\"tapToast()\">\n    <button *ngIf=\"options.closeButton\" class=\"toast-close-button\" (click)=\"remove()\">×</button>\n    <div *ngIf=\"title\" class=\"{{options.titleClass}}\" [attr.aria-label]=\"title\">{{title}}</div>\n    <div *ngIf=\"message\" class=\"{{options.messageClass}}\" [attr.aria-label]=\"message\">\n      {{message}}\n    </div>\n    <!--TODO: allow html\n    <div ng-switch on=\"allowHtml\">\n      <div ng-switch-when=\"true\" ng-if=\"title\" class=\"{{titleClass}}\" ng-bind-html=\"title\"></div>\n      <div ng-switch-when=\"true\" class=\"{{messageClass}}\" ng-bind-html=\"message\"></div>\n    </div>\n    -->\n    <!-- TODO: progressbar\n    <progress-bar *ngIf=\"progressBar\"></progress-bar>\n    -->\n  </div>\n  `,\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({\n        opacity: 0\n      })),\n      state('active', style({\n        opacity: 1\n      })),\n      state('removed', style({\n        opacity: 0\n      })),\n      transition('inactive <=> active', animate('300ms ease-in')),\n      transition('active <=> removed', animate('300ms ease-in')),\n    ]),\n  ],\n})\nexport class Toast {\n  toastId: number;\n  timeout: number;\n  message: string;\n  title: string;\n  toastType: string;\n  options: ToastConfig;\n  // used to control animation\n  state: string = 'inactive';\n\n  constructor(\n    private toastrService: ToastrService\n  ) {}\n  activateToast() {\n    this.state = 'active';\n    if (+this.options.timeOut !== 0) {\n      this.timeout = setTimeout(() => {\n        this.remove();\n      }, +this.options.timeOut);\n    }\n  }\n\n  tapToast() {\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n\n  remove() {\n    if (this.state === 'removed') {\n      return;\n    }\n    this.state = 'removed';\n    setTimeout(() => this.toastrService.remove(this.toastId), 300);\n  }\n}\n"]}