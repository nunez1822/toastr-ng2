{"version":3,"file":"system-config.js","sourceRoot":"","sources":["Users/scoope7/toastr-ng2/tmp/broccoli_type_script_compiler-input_base_path-ovZsQlYY.tmp/0/src/system-config.ts"],"names":[],"mappings":"AAAA;;gGAEgG;AAEhG,IAAM,UAAU,GAAG;IACjB,QAAQ;CACT,CAAC;AAEF,kCAAkC;AAClC,IAAM,GAAG,GAAQ,EAChB,CAAC;AAGF,mCAAmC;AACnC,IAAM,QAAQ,GAAQ;IACpB,uFAAuF;IACvF,uEAAuE;IACvE,GAAG,EAAE;QACH,gBAAgB,EAAE,IAAI;KACvB;CACF,CAAC;AAGF,gGAAgG;AAChG;;gGAEgG;AAChG,IAAM,OAAO,GAAa;IACxB,4BAA4B;IAC5B,eAAe;IACf,iBAAiB;IACjB,mBAAmB;IACnB,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,2BAA2B;IAC3B,mCAAmC;IACnC,yBAAyB;IACzB,gBAAgB;IAEhB,sBAAsB;IACtB,MAAM;IACN,QAAQ;IAER,wBAAwB;IACxB,UAAU;IACV,eAAe;IACf,UAAU;IACV,gBAAgB;IAChB,QAAQ;IACR,SAAS;SACN,UAAU,CAEd,CAAC;AAEF,IAAM,gBAAgB,GAAG,EAAE,CAAC;AAC5B,OAAO,CAAC,OAAO,CAAC,UAAC,UAAkB;IAC1B,gBAAiB,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3D,CAAC,CAAC,CAAC;AAKH,wCAAwC;AACxC,MAAM,CAAC,MAAM,CAAC;IACZ,GAAG,EAAE;QACH,UAAU,EAAE,iBAAiB;QAC7B,oBAAoB,EAAE,2BAA2B;QACjD,MAAM,EAAE,aAAa;QACrB,QAAQ,EAAE,eAAe;QACzB,MAAM,EAAE,SAAS;KAClB;IACD,QAAQ,EAAE,gBAAgB;CAC3B,CAAC,CAAC;AAEH,IAAM,YAAY,GAAY;IAC5B,MAAM;CACP,CAAC;AAEF,YAAY,CAAC,OAAO,CAAC,UAAC,GAAG;IACvB,QAAQ,CAAC,yBAAsB,GAAG,CAAE,CAAC,GAAG,EAAC,IAAI,EAAK,GAAG,QAAK,EAAC,CAAC;AAC9D,CAAC,CAAC,CAAC;AAEH,kCAAkC;AAClC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAA,GAAG,EAAE,UAAA,QAAQ,EAAE,CAAC,CAAC","sourcesContent":["/***********************************************************************************************\n * User Configuration.\n **********************************************************************************************/\n\nconst components = [\n  'toastr',\n];\n\n/** Map relative paths to URLs. */\nconst map: any = {\n};\n\n\n/** User packages configuration. */\nconst packages: any = {\n  // Set the default extension for the root package, because otherwise the demo-app can't\n  // be built within the production mode. Due to missing file extensions.\n  '.': {\n    defaultExtension: 'js'\n  }\n};\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////\n/***********************************************************************************************\n * Everything underneath this line is managed by the CLI.\n **********************************************************************************************/\nconst barrels: string[] = [\n  // Angular specific barrels.\n  '@angular/core',\n  '@angular/common',\n  '@angular/compiler',\n  '@angular/http',\n  '@angular/forms',\n  '@angular/router',\n  '@angular/platform-browser',\n  '@angular/platform-browser-dynamic',\n  '@angular2-material/core',\n  '@types/core-js',\n\n  // Thirdparty barrels.\n  'rxjs',\n  'lodash',\n\n  // App specific barrels.\n  'demo-app',\n  'button-toggle',\n  'gestures',\n  'live-announcer',\n  'portal',\n  'overlay',\n  ...components\n  /** @cli-barrel */\n];\n\nconst _cliSystemConfig = {};\nbarrels.forEach((barrelName: string) => {\n  (<any> _cliSystemConfig)[barrelName] = { main: 'index' };\n});\n\n/** Type declaration for ambient System. */\ndeclare var System: any;\n\n// Apply the CLI SystemJS configuration.\nSystem.config({\n  map: {\n    '@angular': 'vendor/@angular',\n    '@angular2-material': 'vendor/@angular2-material',\n    'rxjs': 'vendor/rxjs',\n    'lodash': 'vendor/lodash',\n    'main': 'main.js'\n  },\n  packages: _cliSystemConfig\n});\n\nconst materialPkgs:string[] = [\n  'core',\n];\n\nmaterialPkgs.forEach((pkg) => {\n  packages[`@angular2-material/${pkg}`] = {main: `${pkg}.js`};\n});\n\n// Apply the user's configuration.\nSystem.config({ map, packages });\n"]}